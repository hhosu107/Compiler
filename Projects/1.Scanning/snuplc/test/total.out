scanning 'character.mod'...
  1:1: tModule
  1:8: tIdent (character)
  1:17: tSemicolon
  3:1: tVar
  3:5: tIdent (c)
  3:6: tColon
  3:8: tChar
  3:12: tSemicolon
  5:1: tFunction
  5:10: tIdent (test)
  5:14: tLParen
  5:15: tIdent (a)
  5:16: tColon
  5:18: tChar
  5:22: tRParen
  5:23: tColon
  5:25: tChar
  5:29: tSemicolon
  6:1: tBegin
  7:3: tReturn
  7:10: tIdent (a)
  8:1: tEnd
  8:5: tIdent (test)
  8:9: tSemicolon
  10:1: tProcedure
  10:11: tIdent (WriteLn)
  10:18: tLParen
  10:19: tIdent (string)
  10:25: tColon
  10:27: tChar
  10:31: tLBracket
  10:32: tRBracket
  10:33: tRParen
  10:34: tSemicolon
  11:1: tBegin
  12:1: tEnd
  12:5: tIdent (WriteLn)
  12:12: tSemicolon
  14:1: tBegin
  15:3: tIdent (c)
  15:5: tAssign
  15:8: tCharacter (7)
  15:11: tSemicolon
  16:3: tIdent (c)
  16:5: tAssign
  16:8: tIdent (test)
  16:12: tLParen
  16:13: tIdent (c)
  16:14: tRParen
  16:15: tSemicolon
  17:3: tIdent (c)
  17:5: tAssign
  17:8: tIdent (test)
  17:12: tLParen
  17:13: tCharacter (0)
  17:16: tRParen
  17:17: tSemicolon
  18:3: tIdent (WriteLn)
  18:10: tLParen
  18:11: tString (Hello, world!\n)
  18:28: tRParen
  19:1: tEnd
  19:5: tIdent (character)
  19:14: tDot
  21:1: tEOF


scanning 'fibonacci.mod'...
  1:1: tComment (//)
  2:1: tComment (// Fibonacci: compute fibonacci numbers)
  3:1: tComment (//)
  4:1: tModule
  4:8: tIdent (fibonacci)
  4:17: tSemicolon
  6:1: tVar
  6:5: tIdent (n)
  6:6: tColon
  6:8: tInteger
  6:15: tSemicolon
  8:1: tComment (// fib(n: integer): integer)
  9:1: tComment (// compute the fibonacci number of n. n >= 0)
  10:1: tFunction
  10:10: tIdent (fib)
  10:13: tLParen
  10:14: tIdent (n)
  10:15: tColon
  10:17: tInteger
  10:24: tRParen
  10:25: tColon
  10:27: tInteger
  10:34: tSemicolon
  11:1: tBegin
  12:3: tIf
  12:6: tLParen
  12:7: tIdent (n)
  12:9: tRelOp (<=)
  12:12: tNumber (1)
  12:13: tRParen
  12:15: tThen
  13:5: tReturn
  13:12: tIdent (n)
  14:3: tElse
  15:5: tReturn
  15:12: tIdent (fib)
  15:15: tLParen
  15:16: tIdent (n)
  15:17: tPlusMinus (-)
  15:18: tNumber (1)
  15:19: tRParen
  15:21: tPlusMinus (+)
  15:23: tIdent (fib)
  15:26: tLParen
  15:27: tIdent (n)
  15:28: tPlusMinus (-)
  15:29: tNumber (2)
  15:30: tRParen
  16:3: tEnd
  17:1: tEnd
  17:5: tIdent (fib)
  17:8: tSemicolon
  19:1: tBegin
  20:3: tIdent (Write)
  20:8: tLParen
  20:9: tString (Enter a number: )
  20:27: tRParen
  20:28: tSemicolon
  21:3: tIdent (n)
  21:5: tAssign
  21:8: tIdent (ReadInt)
  21:15: tLParen
  21:16: tRParen
  21:17: tSemicolon
  23:3: tComment (// loop until the user enters a number < 0)
  24:3: tWhile
  24:9: tLParen
  24:10: tIdent (n)
  24:12: tRelOp (>)
  24:14: tNumber (0)
  24:15: tRParen
  24:17: tDo
  25:5: tIdent (Write)
  25:10: tLParen
  25:11: tString (Result: )
  25:21: tRParen
  25:22: tSemicolon
  25:24: tIdent (WriteInt)
  25:32: tLParen
  25:33: tIdent (fib)
  25:36: tLParen
  25:37: tIdent (n)
  25:38: tRParen
  25:39: tRParen
  25:40: tSemicolon
  25:42: tIdent (WriteLn)
  25:49: tSemicolon
  27:5: tIdent (Write)
  27:10: tLParen
  27:11: tString (Enter a number: )
  27:29: tRParen
  27:30: tSemicolon
  28:5: tIdent (n)
  28:7: tAssign
  28:10: tIdent (ReadInt)
  28:17: tLParen
  28:18: tRParen
  29:3: tEnd
  30:1: tEnd
  30:5: tIdent (fibonacci)
  30:14: tDot
  31:1: tEOF


scanning 'test01.mod'...
  1:1: tAssign
  2:1: tPlusMinus (+)
  3:1: tPlusMinus (-)
  4:1: tMulDiv (*)
  5:1: tMulDiv (/)
  7:1: tRelOp (=)
  8:1: tRelOp (#)
  10:1: tSemicolon
  11:1: tDot
  12:1: tLParen
  13:1: tRParen
  15:1: tNumber (0)
  16:1: tNumber (1)
  17:1: tNumber (7)
  18:1: tNumber (123456789)
  19:1: tIdent (a)
  20:1: tIdent (b)
  21:1: tIdent (f)
  22:1: tIdent (xyz)
  23:1: tEOF


scanning 'test02.mod'...
  1:1: tIdent (a)
  1:2: tRelOp (=)
  1:3: tAssign
  1:5: tRelOp (=)
  1:6: tRelOp (#)
  1:7: tAssign
  1:9: tSemicolon
  1:10: tSemicolon
  1:11: tSemicolon
  1:12: tNumber (1)
  1:13: tLParen
  1:14: tNumber (2)
  1:15: tRParen
  1:16: tSemicolon
  1:17: tNumber (11)
  1:19: tAssign
  1:21: tPlusMinus (-)
  1:22: tNumber (1)
  1:23: tDot
  1:24: tNumber (1)
  1:25: tSemicolon
  1:26: tNumber (5)
  1:27: tColon
  1:28: tAssign
  1:30: tRelOp (=)
  1:31: tNumber (5)
  1:32: tSemicolon
  4:1: tLBracket
  5:1: tRBracket
  6:1: tUndefined (invalid character ({))
  7:1: tUndefined (invalid character (}))
  8:1: tUndefined (invalid character (?))
  9:1: tUndefined (invalid character (^))
  10:1: tUndefined (invalid character (\\))
  11:1: tEOF


scanning 'test03.mod'...
  1:1: tIdent (a)
  1:3: tAssign
  1:6: tNumber (5)
  1:7: tSemicolon
  3:1: tIdent (b)
  3:3: tAssign
  3:6: tNumber (2)
  3:8: tPlusMinus (+)
  3:10: tNumber (3)
  3:11: tSemicolon
  5:1: tIdent (c)
  5:3: tAssign
  5:6: tNumber (2)
  5:8: tPlusMinus (+)
  5:10: tNumber (3)
  5:12: tMulDiv (*)
  5:14: tLParen
  5:15: tNumber (1)
  5:17: tPlusMinus (-)
  5:19: tNumber (2)
  5:21: tPlusMinus (-)
  5:23: tNumber (3)
  5:25: tPlusMinus (+)
  5:27: tNumber (1)
  5:28: tRParen
  6:1: tDot
  7:1: tEOF


Done.
